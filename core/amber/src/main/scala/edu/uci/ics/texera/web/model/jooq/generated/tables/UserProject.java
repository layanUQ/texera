/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables;


import edu.uci.ics.texera.web.model.jooq.generated.Indexes;
import edu.uci.ics.texera.web.model.jooq.generated.Keys;
import edu.uci.ics.texera.web.model.jooq.generated.TexeraDb;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.UserProjectRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserProject extends TableImpl<UserProjectRecord> {

    private static final long serialVersionUID = -1484603250;

    /**
     * The reference instance of <code>texera_db.user_project</code>
     */
    public static final UserProject USER_PROJECT = new UserProject();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserProjectRecord> getRecordType() {
        return UserProjectRecord.class;
    }

    /**
     * The column <code>texera_db.user_project.pid</code>.
     */
    public final TableField<UserProjectRecord, UInteger> PID = createField(DSL.name("pid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>texera_db.user_project.name</code>.
     */
    public final TableField<UserProjectRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>texera_db.user_project.owner_id</code>.
     */
    public final TableField<UserProjectRecord, UInteger> OWNER_ID = createField(DSL.name("owner_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.user_project.creation_time</code>.
     */
    public final TableField<UserProjectRecord, Timestamp> CREATION_TIME = createField(DSL.name("creation_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>texera_db.user_project.color</code>.
     */
    public final TableField<UserProjectRecord, String> COLOR = createField(DSL.name("color"), org.jooq.impl.SQLDataType.VARCHAR(6), this, "");

    /**
     * Create a <code>texera_db.user_project</code> table reference
     */
    public UserProject() {
        this(DSL.name("user_project"), null);
    }

    /**
     * Create an aliased <code>texera_db.user_project</code> table reference
     */
    public UserProject(String alias) {
        this(DSL.name(alias), USER_PROJECT);
    }

    /**
     * Create an aliased <code>texera_db.user_project</code> table reference
     */
    public UserProject(Name alias) {
        this(alias, USER_PROJECT);
    }

    private UserProject(Name alias, Table<UserProjectRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserProject(Name alias, Table<UserProjectRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserProject(Table<O> child, ForeignKey<O, UserProjectRecord> key) {
        super(child, key, USER_PROJECT);
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_PROJECT_OWNER_ID, Indexes.USER_PROJECT_PRIMARY);
    }

    @Override
    public Identity<UserProjectRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_USER_PROJECT;
    }

    @Override
    public UniqueKey<UserProjectRecord> getPrimaryKey() {
        return Keys.KEY_USER_PROJECT_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserProjectRecord>> getKeys() {
        return Arrays.<UniqueKey<UserProjectRecord>>asList(Keys.KEY_USER_PROJECT_PRIMARY, Keys.KEY_USER_PROJECT_OWNER_ID);
    }

    @Override
    public List<ForeignKey<UserProjectRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserProjectRecord, ?>>asList(Keys.USER_PROJECT_IBFK_1);
    }

    public User user() {
        return new User(this, Keys.USER_PROJECT_IBFK_1);
    }

    @Override
    public UserProject as(String alias) {
        return new UserProject(DSL.name(alias), this);
    }

    @Override
    public UserProject as(Name alias) {
        return new UserProject(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserProject rename(String name) {
        return new UserProject(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserProject rename(Name name) {
        return new UserProject(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<UInteger, String, UInteger, Timestamp, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
